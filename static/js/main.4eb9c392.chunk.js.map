{"version":3,"sources":["component/image.jpg","component/Passwordstrong.js","component/Formsignup.js","App.js","reportWebVitals.js","index.js"],"names":["Passwordstrong","score","pass","zxcvbn","num","passcolor","className","style","width","background","height","color","createpasslabel","Formsignup","callback","handleSubmits","useState","setScore","Form","useForm","form","setvalues","error","seterror","src","img","name","onFinish","values","console","log","message","success","onFinishfail","errorInfo","Item","label","rules","required","whitespace","placeholder","validator","_","value","length","Promise","resolve","reject","type","e","target","Password","marginLeft","dependencies","getFieldValue","valuePropName","wrapperCol","offset","span","shouldUpdate","htmlType","onClick","resetFields","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eb9c392.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image.0c6d32a8.jpg\";","import React from 'react'\r\nimport zxcvbn from 'zxcvbn'\r\n\r\nfunction Passwordstrong({score}) {\r\n    const pass = zxcvbn(score);\r\n    const num = pass.score * 100/4;\r\n\r\n    const createpasslabel = ()=>{\r\n        switch(pass.score){\r\n            case 1:\r\n                return 'Weak';\r\n            case 2:\r\n                return 'Fear';\r\n            case 3:\r\n                return 'Good';\r\n            case 4:\r\n                return 'Strong';\r\n            default:\r\n                    return '';\r\n    }\r\n}\r\n    \r\n    const passcolor = () =>{\r\n        switch(pass.score){\r\n            case 0:\r\n                return '#828282';\r\n            case 1:\r\n                return '#ea1111';\r\n            case 2:\r\n                return '#ffad00';\r\n            case 3:\r\n                return 'rgba(101, 219, 111, 0.815)';\r\n            case 4:\r\n                return '#00b500';\r\n            default:\r\n                    return 'none'\r\n        }\r\n    }\r\n\r\n    const changepasscolor = () =>({\r\n        width:`${num}%`,\r\n        background:passcolor(),\r\n        height:'4px',\r\n    })\r\n    return (\r\n        <div className=\"password\" style={changepasscolor()}>  \r\n        <p style={{color:passcolor()}}>{createpasslabel()}</p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Passwordstrong\r\n","import React, { useState,useEffect, Fragment } from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport './Formsignup.css'\r\nimport img from './image.jpg'\r\nimport { Form, Input, Button, Checkbox, Table, message } from 'antd';\r\nimport Password from 'antd/lib/input/Password';\r\nimport Passwordstrong from './Passwordstrong';\r\nimport Formsuccess from './Formsuccess';\r\n\r\nfunction Formsignup({handleSubmits},callback) {\r\n  const [score, setScore] = useState(\"\")\r\n  const [form] = Form.useForm(); \r\n  const [values ,setvalues] = useState([])\r\n  const [error ,seterror] = useState([])\r\n  const [submitted,setsubmitted] = useState(false)\r\n\r\n\r\n\r\n  const onfinished = (values) => {\r\n    setvalues(values)\r\n    console.log(\"Values\",values)\r\n    if(values != \"\"){\r\n      message.success('Registered Successfully');\r\n    }\r\n  };\r\n\r\n  const onfinishfail = (errorInfo) => {\r\n    seterror(errorInfo)\r\n    console.log(\"Error\",error)\r\n  };\r\n\r\n\r\n        return (\r\n        <section>\r\n          <div className=\"imgbx\">\r\n            <img src = {img}/>\r\n          </div>\r\n          <div className=\"container\">\r\n          <div className=\"inner-container\">\r\n            <h1>Register</h1>\r\n        <Form className=\"form-container\" form={form} name=\"register\" onFinish={onfinished} onFinishfail={onfinishfail}>\r\n          <Form.Item className='label_container'\r\n            label=\"Firstname\"\r\n            name=\"firstname\"\r\n            rules={[{ required: true, message: 'Please input your Firstname!',\r\n            whitespace:true }]}\r\n          >\r\n            <Input placeholder=\"Firstname\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item className='label_container'\r\n            label=\"Lastname\"\r\n            name=\"lastname\"\r\n          >\r\n            <Input placeholder=\"Lastname\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item className='label_container'\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            rules={[{ required: true, message: 'Please input your phone!' },\r\n            {validator:(_, value) =>\r\n              value < 0 || value > 9 && value.length < 11 ? Promise.resolve() : Promise.reject(\"Enter Valid Number\")\r\n            }]}\r\n          >\r\n            <Input placeholder=\"Phone\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item className='label_container'\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[\r\n                { type:\"email\",message:\"Invalid Email\"},\r\n                { required: true, message: \"Please input your Email!\" }]}\r\n          >\r\n            <Input placeholder=\"Email\"/>\r\n          </Form.Item>\r\n    \r\n          <Form.Item className='label_container' className=\"passcontainer\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            onChange={e =>setScore(e.target.value)}\r\n            rules={[{ required: true, message: 'Please input your password!' }]}\r\n          >\r\n            <Input.Password placeholder=\"Password\"/>\r\n          </Form.Item>\r\n          <div className=\"passwords\"><Passwordstrong score={score}/></div>\r\n\r\n          <Form.Item className='label_container' style={{marginLeft:'-60px'}}\r\n            label=\"Conform Password\"\r\n            name=\"conformpassword\"\r\n            dependencies={[Password]}\r\n            rules={[\r\n                { required: true, message: 'Please input your password!' },\r\n                ({getFieldValue}) => ({\r\n                    validator(_, value){\r\n                        if(!value || getFieldValue(\"password\") === value){\r\n                            return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(\"Password Mismatch\")\r\n                    }\r\n                })\r\n              ]}\r\n          >\r\n            <Input.Password placeholder=\"Password\"/>\r\n          </Form.Item>\r\n    \r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n    \r\n          <Form.Item shouldUpdate wrapperCol={{ offset: 8, span: 16 }}>\r\n          {() => (\r\n            <Fragment>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n          >Register\r\n            </Button>\r\n            <Button style={{marginLeft: 20}}\r\n            htmlType=\"button\" onClick={() => form.resetFields(setScore('0'))}>\r\n              Reset\r\n            </Button>\r\n            </Fragment>\r\n            )}\r\n          </Form.Item>\r\n        </Form>\r\n        </div>\r\n        </div>\r\n        </section>\r\n      );\r\n}\r\n\r\nexport default Formsignup\r\n","\nimport Form from './component/Form'\nimport Formsignup from './component/Formsignup';\nimport Formsuccess from './component/Formsuccess';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Formsignup/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}